Ce fichier liste les modifications apportées au site (les plus récentes en tête).
11/09/06, SF
premier test avec subclipse

28/07/06, DM
- nouvelle publication pour ascodocpsy.
- refactoring de runtime::setup éclatement en fonctions, gestion du mode ligne
  de commandes.
- première version à peu près fonctionnelle du gestionnaire de tâches. Il reste
  plusieurs choses à résoudre : safe mode/safe_mode_exec_dir, statut des tâches
  à mieux gérer, éditer/modifier/supprimer une tâche, option d'envoi des 
  résultats par e-mail, etc.

11/07/06, DM
- toujours sur le module Routing. Réécriture complète de l'algorithme de tri
  des règles de routage (plusieurs cas n'étaient pas traités).
  
06/07/06, DM
- réécriture complète de Routing::linkFor qui était buggée. Fonctionne désormais
  correctement mais fait apparaître de nouveaux bugs dans setupRoute

03/07/06, DM
- clé de config acccess dans les modules: dans le fichier de config d'un module,
  on peut indiquer une clé 'access' qui indique les droits requis pour utiliser
  le module. La clé peut être indiquée au niveau module ou au niveau d'une 
  action.
- début du développement de BisDatabase
- templates conditionnels : dans la clé template, on peut indiquer un tableau
  qui pour chaque droit utilisateur indique le tempalte à utiliser.
- ajout du droit 'default' dans la gestion des utilisateurs. C'est un 
  pseudo-droit qui est automatiquement octroyé à tout le monde, et qui est 
  utilisé dans les fichiers de configuration.

30/06/06, DM
- Système de log, constante debug, debug bar

29/06/06, DM
- Premier test d'exécution de fab sous linux, plusieurs problèmes liés au fait 
  que linux est sensible à la casse.
  - les controlleurs font include 'runtime.php' -> R majuscule
  - fab fait include 'BisWeb.php', mais le fichier était nommé biswep.php. Renommé
  - Module::loadModule ne trouve pas les modules demandés. Nouvelles règles :
    - le nom du module doit être en tout minuscules, avec une initiale en majuscule
      exemples : Base et non pas base, Config et non pas config, Homepage et non
      pas HomePage, Notfound et non pas NotFound, etc.
    - c'est ce nom qui doit être utilisé : pour le nom du répertoire, pour le nom
      du fichier php, pour le nom de l'objet, pour le nom de la clé 'module' des
      fichiers de config des pseudo-modules, etc. Bref : partout.
    - loadModule fait systématiquement : mise en minu de tout+ucfirst. Ainsi, si
      l'url contient le module BASE->base->base
- Les routes sont désormais insensibles à la casse (ajout du flag 'i' dans la 
  regexp si c'est nécessaire, c'est-à-dire si la regexp contient des lettres).
  Remarque : pourrait être une option.

28/06/06, DM
- Modification de tous les include/require. Jusque là on indiquait un chemin 
  relatif (par exemple require_once 'Debug.php'. Le chemin était recherché dans
  le include_path, ce qui fonctionnait. Mais si jamais l'application a un fichier
  qui porte le même nom, ce n'est plus notre fichier qui est inclus. Désormais,
  tous les include du framework sont de la forme 
  require_once self::$fabRoot.'xxx.php'

- correction d'un bug lorsque les smart urls sont désactivées : l'url demandée
  n'était pas ajustée correctement.

- introduction de Runtime::$realHome. Lorsqu'on fait un lien (image, css, js...)
  vers un fichier qui existe dans le répertoire web de l'application, il ne faut
  pas que l'url obtenue indique le front contrôler. Or Runtime::$home contient
  toujours le FC lorsque les smart urls sont désactivées. $realHome=home sans
  le FC. Utilisé par Routin::linkFor et convertCssOrJsPath (fonction à revoir,
  au passage).

27/06/06, DM
- Gestion des environnements. Runtime::setup prend maintenant un paramètre 
  optionnel qui définit l'environnement d'exécution (chaine vide = environnement
  normal d'exploitation).
  Pour chaque environnement et pour chaque fichier de configuration possible
  (config.php, general.yaml, routes.yaml, fichier config.yaml d'un module...),
  on peut avoir un fichier spécifique à cet environnement. Par exemple pour 
  l'environnement 'debug', on pourra avoir les fichiers config.debug.php, 
  general.debug.php, routes.debug.php, config.debug.yaml, etc.
  Les valeurs indiquées dans un fichier de configuration spécifique à un 
  environnement sont prioritaires par rapports à celles indiquées dans le fichier
  de configuration par défaut.

26/06/06, DM
- correction d'un bug dans le gestinnaire de cache et de config : tout était
  recompilé systématiquement. Cause du bug : lignes 'xxx: false # comment'. Dans
  ce cas là, spyc ne reconnait pas un booléen et on obtient comme valeur la
  chaine 'false'. Du coup les tests ' if("false") sont toujours vrai...
  ->Ne pas utiliser de commentaires à la suite des valeurs, toujours sur une
  ligne séparée.

23/06/06, DM
- Modification du gestinnaire de modules.
  - chaque module peut maintenant avoir un fichier de configuration
  - un module peut être un pseudo-module : pas de classe php, juste un fichier 
    de config avec une clé 'module' qui indique le module à utiliser
  - héritage généralisé : un module peut hériter d'un vrai module ou d'un
    pseudo-module.
    
19/06/06, DM
- développement du gestionnaire d'exceptions.
- écriture de Utils::searchFile
- modification des bouts de code qui recherchent des fichiers
	- un template est recherché : dans le répertoire du script appellant, dans
	  le répertoire 'templates' de l'application, dans le répertoire 'templates'
	  du framework
	- un module est recherché : dans le répertoire 'modules' de l'application,
	  dans le répertoire 'modules' du framework
- modification de Template::run : 
	- le nom du template n'est plus optionnel
	- il n'y a plus d'extension par défaut (il faut la préciser systématiquement)

02/06/06, DM
- création de ce fichier
